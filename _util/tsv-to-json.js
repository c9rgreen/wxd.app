/*
 * Generated by Claude 3.5 Sonnet
 */
import { promises as fs } from 'fs';

function tsvToJson(tsvString) {
  // Split the TSV into lines and filter out empty lines
  const lines = tsvString.trim().split('\n').filter(line => line.length > 0);

  // Get headers from first line
  const headers = lines[0].split('\t');

  // Convert remaining lines to objects
  const result = lines.slice(1).map(line => {
    const values = line.split('\t');
    return headers.reduce((obj, header, index) => {
      // Try to convert to number if possible, otherwise keep as string
      const value = values[index];
      obj[header] = isNaN(value) ? value : Number(value);
      return obj;
    }, {});
  });

  return result;
}

// Example usage
async function convertTsvFile(inputPath, outputPath) {
  try {
    // Read TSV file
    const tsvData = await fs.readFile(inputPath, 'utf8');

    // Convert to JSON
    const jsonData = tsvToJson(tsvData);

    // Write JSON file
    await fs.writeFile(
      outputPath,
      JSON.stringify(jsonData, null, 2)
    );

    console.log('Conversion completed successfully!');
  } catch (error) {
    console.error('Error during conversion:', error);
  }
}

convertTsvFile("offices.tsv", "offices.json")
